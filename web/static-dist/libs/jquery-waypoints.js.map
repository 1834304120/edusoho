{"version":3,"sources":["webpack:///webpack/bootstrap a5cc192ed1e040fbd7f5","webpack:///./node_modules/jquery-waypoints/waypoints.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,gDAAgD,iCAAiC,OAAO,OAAO,6CAA6C,EAAE,WAAW,EAAE;AAC3J;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH,CAAC;;AAED,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC,e","file":"libs/jquery-waypoints.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId, i) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\tif(i != 0) {\n \t\t\tinstalledModules[moduleId] = module;\n \t\t}\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static-dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a5cc192ed1e040fbd7f5","/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar module = false;\nvar exports = false;\n(function() {\n\n/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar module = false;\nvar exports = false;\n(function() {\n\n/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar module = false;\nvar exports = false;\n(function() {\n\n/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar module = false;\nvar exports = false;\n(function() {\n\n/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar module = false;\nvar exports = false;\n(function() {\n\n/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar module = false;\nvar exports = false;\n(function() {\n\n// Generated by CoffeeScript 1.6.2\n/*!\njQuery Waypoints - v2.0.5\nCopyright (c) 2011-2014 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt\n*/\n\n\n(function() {\n  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __slice = [].slice;\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define('waypoints', ['jquery'], function($) {\n        return factory($, root);\n      });\n    } else {\n      return factory(root.jQuery, root);\n    }\n  })(window, function($, window) {\n    var $w, Context, Waypoint, allWaypoints, contextCounter, contextKey, contexts, isTouch, jQMethods, methods, resizeEvent, scrollEvent, waypointCounter, waypointKey, wp, wps;\n\n    $w = $(window);\n    isTouch = __indexOf.call(window, 'ontouchstart') >= 0;\n    allWaypoints = {\n      horizontal: {},\n      vertical: {}\n    };\n    contextCounter = 1;\n    contexts = {};\n    contextKey = 'waypoints-context-id';\n    resizeEvent = 'resize.waypoints';\n    scrollEvent = 'scroll.waypoints';\n    waypointCounter = 1;\n    waypointKey = 'waypoints-waypoint-ids';\n    wp = 'waypoint';\n    wps = 'waypoints';\n    Context = (function() {\n      function Context($element) {\n        var _this = this;\n\n        this.$element = $element;\n        this.element = $element[0];\n        this.didResize = false;\n        this.didScroll = false;\n        this.id = 'context' + contextCounter++;\n        this.oldScroll = {\n          x: $element.scrollLeft(),\n          y: $element.scrollTop()\n        };\n        this.waypoints = {\n          horizontal: {},\n          vertical: {}\n        };\n        this.element[contextKey] = this.id;\n        contexts[this.id] = this;\n        $element.bind(scrollEvent, function() {\n          var scrollHandler;\n\n          if (!(_this.didScroll || isTouch)) {\n            _this.didScroll = true;\n            scrollHandler = function() {\n              _this.doScroll();\n              return _this.didScroll = false;\n            };\n            return window.setTimeout(scrollHandler, $[wps].settings.scrollThrottle);\n          }\n        });\n        $element.bind(resizeEvent, function() {\n          var resizeHandler;\n\n          if (!_this.didResize) {\n            _this.didResize = true;\n            resizeHandler = function() {\n              $[wps]('refresh');\n              return _this.didResize = false;\n            };\n            return window.setTimeout(resizeHandler, $[wps].settings.resizeThrottle);\n          }\n        });\n      }\n\n      Context.prototype.doScroll = function() {\n        var axes,\n          _this = this;\n\n        axes = {\n          horizontal: {\n            newScroll: this.$element.scrollLeft(),\n            oldScroll: this.oldScroll.x,\n            forward: 'right',\n            backward: 'left'\n          },\n          vertical: {\n            newScroll: this.$element.scrollTop(),\n            oldScroll: this.oldScroll.y,\n            forward: 'down',\n            backward: 'up'\n          }\n        };\n        if (isTouch && (!axes.vertical.oldScroll || !axes.vertical.newScroll)) {\n          $[wps]('refresh');\n        }\n        $.each(axes, function(aKey, axis) {\n          var direction, isForward, triggered;\n\n          triggered = [];\n          isForward = axis.newScroll > axis.oldScroll;\n          direction = isForward ? axis.forward : axis.backward;\n          $.each(_this.waypoints[aKey], function(wKey, waypoint) {\n            var _ref, _ref1;\n\n            if ((axis.oldScroll < (_ref = waypoint.offset) && _ref <= axis.newScroll)) {\n              return triggered.push(waypoint);\n            } else if ((axis.newScroll < (_ref1 = waypoint.offset) && _ref1 <= axis.oldScroll)) {\n              return triggered.push(waypoint);\n            }\n          });\n          triggered.sort(function(a, b) {\n            return a.offset - b.offset;\n          });\n          if (!isForward) {\n            triggered.reverse();\n          }\n          return $.each(triggered, function(i, waypoint) {\n            if (waypoint.options.continuous || i === triggered.length - 1) {\n              return waypoint.trigger([direction]);\n            }\n          });\n        });\n        return this.oldScroll = {\n          x: axes.horizontal.newScroll,\n          y: axes.vertical.newScroll\n        };\n      };\n\n      Context.prototype.refresh = function() {\n        var axes, cOffset, isWin,\n          _this = this;\n\n        isWin = $.isWindow(this.element);\n        cOffset = this.$element.offset();\n        this.doScroll();\n        axes = {\n          horizontal: {\n            contextOffset: isWin ? 0 : cOffset.left,\n            contextScroll: isWin ? 0 : this.oldScroll.x,\n            contextDimension: this.$element.width(),\n            oldScroll: this.oldScroll.x,\n            forward: 'right',\n            backward: 'left',\n            offsetProp: 'left'\n          },\n          vertical: {\n            contextOffset: isWin ? 0 : cOffset.top,\n            contextScroll: isWin ? 0 : this.oldScroll.y,\n            contextDimension: isWin ? $[wps]('viewportHeight') : this.$element.height(),\n            oldScroll: this.oldScroll.y,\n            forward: 'down',\n            backward: 'up',\n            offsetProp: 'top'\n          }\n        };\n        return $.each(axes, function(aKey, axis) {\n          return $.each(_this.waypoints[aKey], function(i, waypoint) {\n            var adjustment, elementOffset, oldOffset, _ref, _ref1;\n\n            adjustment = waypoint.options.offset;\n            oldOffset = waypoint.offset;\n            elementOffset = $.isWindow(waypoint.element) ? 0 : waypoint.$element.offset()[axis.offsetProp];\n            if ($.isFunction(adjustment)) {\n              adjustment = adjustment.apply(waypoint.element);\n            } else if (typeof adjustment === 'string') {\n              adjustment = parseFloat(adjustment);\n              if (waypoint.options.offset.indexOf('%') > -1) {\n                adjustment = Math.ceil(axis.contextDimension * adjustment / 100);\n              }\n            }\n            waypoint.offset = elementOffset - axis.contextOffset + axis.contextScroll - adjustment;\n            if ((waypoint.options.onlyOnScroll && (oldOffset != null)) || !waypoint.enabled) {\n              return;\n            }\n            if (oldOffset !== null && (oldOffset < (_ref = axis.oldScroll) && _ref <= waypoint.offset)) {\n              return waypoint.trigger([axis.backward]);\n            } else if (oldOffset !== null && (oldOffset > (_ref1 = axis.oldScroll) && _ref1 >= waypoint.offset)) {\n              return waypoint.trigger([axis.forward]);\n            } else if (oldOffset === null && axis.oldScroll >= waypoint.offset) {\n              return waypoint.trigger([axis.forward]);\n            }\n          });\n        });\n      };\n\n      Context.prototype.checkEmpty = function() {\n        if ($.isEmptyObject(this.waypoints.horizontal) && $.isEmptyObject(this.waypoints.vertical)) {\n          this.$element.unbind([resizeEvent, scrollEvent].join(' '));\n          return delete contexts[this.id];\n        }\n      };\n\n      return Context;\n\n    })();\n    Waypoint = (function() {\n      function Waypoint($element, context, options) {\n        var idList, _ref;\n\n        if (options.offset === 'bottom-in-view') {\n          options.offset = function() {\n            var contextHeight;\n\n            contextHeight = $[wps]('viewportHeight');\n            if (!$.isWindow(context.element)) {\n              contextHeight = context.$element.height();\n            }\n            return contextHeight - $(this).outerHeight();\n          };\n        }\n        this.$element = $element;\n        this.element = $element[0];\n        this.axis = options.horizontal ? 'horizontal' : 'vertical';\n        this.callback = options.handler;\n        this.context = context;\n        this.enabled = options.enabled;\n        this.id = 'waypoints' + waypointCounter++;\n        this.offset = null;\n        this.options = options;\n        context.waypoints[this.axis][this.id] = this;\n        allWaypoints[this.axis][this.id] = this;\n        idList = (_ref = this.element[waypointKey]) != null ? _ref : [];\n        idList.push(this.id);\n        this.element[waypointKey] = idList;\n      }\n\n      Waypoint.prototype.trigger = function(args) {\n        if (!this.enabled) {\n          return;\n        }\n        if (this.callback != null) {\n          this.callback.apply(this.element, args);\n        }\n        if (this.options.triggerOnce) {\n          return this.destroy();\n        }\n      };\n\n      Waypoint.prototype.disable = function() {\n        return this.enabled = false;\n      };\n\n      Waypoint.prototype.enable = function() {\n        this.context.refresh();\n        return this.enabled = true;\n      };\n\n      Waypoint.prototype.destroy = function() {\n        delete allWaypoints[this.axis][this.id];\n        delete this.context.waypoints[this.axis][this.id];\n        return this.context.checkEmpty();\n      };\n\n      Waypoint.getWaypointsByElement = function(element) {\n        var all, ids;\n\n        ids = element[waypointKey];\n        if (!ids) {\n          return [];\n        }\n        all = $.extend({}, allWaypoints.horizontal, allWaypoints.vertical);\n        return $.map(ids, function(id) {\n          return all[id];\n        });\n      };\n\n      return Waypoint;\n\n    })();\n    methods = {\n      init: function(f, options) {\n        var _ref;\n\n        options = $.extend({}, $.fn[wp].defaults, options);\n        if ((_ref = options.handler) == null) {\n          options.handler = f;\n        }\n        this.each(function() {\n          var $this, context, contextElement, _ref1;\n\n          $this = $(this);\n          contextElement = (_ref1 = options.context) != null ? _ref1 : $.fn[wp].defaults.context;\n          if (!$.isWindow(contextElement)) {\n            contextElement = $this.closest(contextElement);\n          }\n          contextElement = $(contextElement);\n          context = contexts[contextElement[0][contextKey]];\n          if (!context) {\n            context = new Context(contextElement);\n          }\n          return new Waypoint($this, context, options);\n        });\n        $[wps]('refresh');\n        return this;\n      },\n      disable: function() {\n        return methods._invoke.call(this, 'disable');\n      },\n      enable: function() {\n        return methods._invoke.call(this, 'enable');\n      },\n      destroy: function() {\n        return methods._invoke.call(this, 'destroy');\n      },\n      prev: function(axis, selector) {\n        return methods._traverse.call(this, axis, selector, function(stack, index, waypoints) {\n          if (index > 0) {\n            return stack.push(waypoints[index - 1]);\n          }\n        });\n      },\n      next: function(axis, selector) {\n        return methods._traverse.call(this, axis, selector, function(stack, index, waypoints) {\n          if (index < waypoints.length - 1) {\n            return stack.push(waypoints[index + 1]);\n          }\n        });\n      },\n      _traverse: function(axis, selector, push) {\n        var stack, waypoints;\n\n        if (axis == null) {\n          axis = 'vertical';\n        }\n        if (selector == null) {\n          selector = window;\n        }\n        waypoints = jQMethods.aggregate(selector);\n        stack = [];\n        this.each(function() {\n          var index;\n\n          index = $.inArray(this, waypoints[axis]);\n          return push(stack, index, waypoints[axis]);\n        });\n        return this.pushStack(stack);\n      },\n      _invoke: function(method) {\n        this.each(function() {\n          var waypoints;\n\n          waypoints = Waypoint.getWaypointsByElement(this);\n          return $.each(waypoints, function(i, waypoint) {\n            waypoint[method]();\n            return true;\n          });\n        });\n        return this;\n      }\n    };\n    $.fn[wp] = function() {\n      var args, method;\n\n      method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (methods[method]) {\n        return methods[method].apply(this, args);\n      } else if ($.isFunction(method)) {\n        return methods.init.apply(this, arguments);\n      } else if ($.isPlainObject(method)) {\n        return methods.init.apply(this, [null, method]);\n      } else if (!method) {\n        return $.error(\"jQuery Waypoints needs a callback function or handler option.\");\n      } else {\n        return $.error(\"The \" + method + \" method does not exist in jQuery Waypoints.\");\n      }\n    };\n    $.fn[wp].defaults = {\n      context: window,\n      continuous: true,\n      enabled: true,\n      horizontal: false,\n      offset: 0,\n      triggerOnce: false\n    };\n    jQMethods = {\n      refresh: function() {\n        return $.each(contexts, function(i, context) {\n          return context.refresh();\n        });\n      },\n      viewportHeight: function() {\n        var _ref;\n\n        return (_ref = window.innerHeight) != null ? _ref : $w.height();\n      },\n      aggregate: function(contextSelector) {\n        var collection, waypoints, _ref;\n\n        collection = allWaypoints;\n        if (contextSelector) {\n          collection = (_ref = contexts[$(contextSelector)[0][contextKey]]) != null ? _ref.waypoints : void 0;\n        }\n        if (!collection) {\n          return [];\n        }\n        waypoints = {\n          horizontal: [],\n          vertical: []\n        };\n        $.each(waypoints, function(axis, arr) {\n          $.each(collection[axis], function(key, waypoint) {\n            return arr.push(waypoint);\n          });\n          arr.sort(function(a, b) {\n            return a.offset - b.offset;\n          });\n          waypoints[axis] = $.map(arr, function(waypoint) {\n            return waypoint.element;\n          });\n          return waypoints[axis] = $.unique(waypoints[axis]);\n        });\n        return waypoints;\n      },\n      above: function(contextSelector) {\n        if (contextSelector == null) {\n          contextSelector = window;\n        }\n        return jQMethods._filter(contextSelector, 'vertical', function(context, waypoint) {\n          return waypoint.offset <= context.oldScroll.y;\n        });\n      },\n      below: function(contextSelector) {\n        if (contextSelector == null) {\n          contextSelector = window;\n        }\n        return jQMethods._filter(contextSelector, 'vertical', function(context, waypoint) {\n          return waypoint.offset > context.oldScroll.y;\n        });\n      },\n      left: function(contextSelector) {\n        if (contextSelector == null) {\n          contextSelector = window;\n        }\n        return jQMethods._filter(contextSelector, 'horizontal', function(context, waypoint) {\n          return waypoint.offset <= context.oldScroll.x;\n        });\n      },\n      right: function(contextSelector) {\n        if (contextSelector == null) {\n          contextSelector = window;\n        }\n        return jQMethods._filter(contextSelector, 'horizontal', function(context, waypoint) {\n          return waypoint.offset > context.oldScroll.x;\n        });\n      },\n      enable: function() {\n        return jQMethods._invoke('enable');\n      },\n      disable: function() {\n        return jQMethods._invoke('disable');\n      },\n      destroy: function() {\n        return jQMethods._invoke('destroy');\n      },\n      extendFn: function(methodName, f) {\n        return methods[methodName] = f;\n      },\n      _invoke: function(method) {\n        var waypoints;\n\n        waypoints = $.extend({}, allWaypoints.vertical, allWaypoints.horizontal);\n        return $.each(waypoints, function(key, waypoint) {\n          waypoint[method]();\n          return true;\n        });\n      },\n      _filter: function(selector, axis, test) {\n        var context, waypoints;\n\n        context = contexts[$(selector)[0][contextKey]];\n        if (!context) {\n          return [];\n        }\n        waypoints = [];\n        $.each(context.waypoints[axis], function(i, waypoint) {\n          if (test(context, waypoint)) {\n            return waypoints.push(waypoint);\n          }\n        });\n        waypoints.sort(function(a, b) {\n          return a.offset - b.offset;\n        });\n        return $.map(waypoints, function(waypoint) {\n          return waypoint.element;\n        });\n      }\n    };\n    $[wps] = function() {\n      var args, method;\n\n      method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (jQMethods[method]) {\n        return jQMethods[method].apply(null, args);\n      } else {\n        return jQMethods.aggregate.call(null, method);\n      }\n    };\n    $[wps].settings = {\n      resizeThrottle: 100,\n      scrollThrottle: 30\n    };\n    return $w.on('load.waypoints', function() {\n      return $[wps]('refresh');\n    });\n  });\n\n}).call(this);\n\n}.call(window));\n}.call(window));\n}.call(window));\n}.call(window));\n}.call(window));\n}.call(window));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jquery-waypoints/waypoints.js\n// module id = f93eb6ea3d51abdce2c3\n// module chunks = libs/jquery-waypoints"],"sourceRoot":""}